/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FInvoice.java
 *
 * Created on Jan 4, 2011, 9:35:06 PM
 */
package mysd.fee;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mysd.DBSystem;
import mysd.GeneralDB;

/**
 *
 * @author salam
 */
public class FInvoiceSingleView extends javax.swing.JFrame {

    private DefaultTableModel modelTBLDetails;
    //private DefaultTableModel modelTBLStudents;
    private GeneralDB gdb;
    private String invoiceID;

    /** Creates new form FInvoice */
    public FInvoiceSingleView() {
        initComponents();
        gdb = new GeneralDB();
        this.setLocationRelativeTo(null);
        modelTBLDetails = (DefaultTableModel) tblDetails.getModel();
        //modelTBLStudents = (DefaultTableModel)tblStudents.getModel();
        modelTBLDetails.setRowCount(0);
        setTimeData();
    }
    
    public FInvoiceSingleView(String invoiceID) {
        initComponents();
        this.invoiceID = invoiceID;
        tfInvoiceID.setText(invoiceID);
        gdb = new GeneralDB();
        this.setLocationRelativeTo(null);
        modelTBLDetails = (DefaultTableModel) tblDetails.getModel();
        //modelTBLStudents = (DefaultTableModel)tblStudents.getModel();
        modelTBLDetails.setRowCount(0);
        setBasicInvoiceData();
        setInvoiceDetails();
    }

    public void setBasicInvoiceData(){

        String query = "SELECT STUDENT_ID, GRADE_ID, TIME_CODE,"
                + "ISSUE_DATE, DUE_DATE, INVOICE_TOTAL, INVOICE_STATUS,"
                + "DISCOUNT FROM MONTHLYINVOICE WHERE INVOICE_ID LIKE "
                + "'"+invoiceID+"'";

        Vector v = gdb.getSingleRow(query);
        String studentID = (String)v.get(0);
        String gradeID = (String)v.get(1);
        String tcode = (String)v.get(2);
        String idate = (String)v.get(3);
        String ddate = (String)v.get(4);
        String itotal = (String)v.get(5);
        String istatus = (String)v.get(6);
        String discount = (String)v.get(7);

        if(istatus.compareToIgnoreCase("ISSUED")==0){
            btnUpdate.setEnabled(false);
        }

        tfStudentID.setText(studentID);
        tfGradeID.setText(gradeID);
        tfTimeCode.setText(tcode);
        tfIssueDate.setDate(gdb.getDateSQLFormatInput(idate));
        tfDueDate.setDate(gdb.getDateSQLFormatInput(ddate));
        tfInvoiceTotal.setText(itotal);
        tfStatus.setText(istatus);
        tfDiscount.setText(discount);
    }

    public void setInvoiceDetails(){
        String query = "SELECT FEE_CATEGORY, FEE_DETAILS, FEE_AMOUNT "
                + "FROM MONTHLYINVOICEDETAILS WHERE "
                + "INVOICE_ID LIKE '"+invoiceID+"'";
        ArrayList al = gdb.searchRecord(query);
        Iterator i = al.iterator();
        while(i.hasNext()){
            this.modelTBLDetails.addRow((Vector)i.next());
        }
    }




    public void setTimeData(){
        String currentDate = gdb.getCurrentDate();
        if(currentDate != null){
            String[] toke = currentDate.split("-");
            String year = toke[0];
            String month = toke[1];
            int m = Integer.parseInt(month);
            
            String strTCMonth = "";
            String strTCYear = "";

            if(m < 10){
                strTCMonth = "0"+Integer.toString(m+1);
                strTCYear = year;
            }else if(m == 12){
                strTCMonth = "01";
                int y = Integer.parseInt(year);
                strTCYear = Integer.toString(y+1);
            }else{
                strTCMonth = Integer.toString(m+1);
                strTCYear = year;
            }

            tfTimeCode.setText(strTCMonth+strTCYear);

            int mm = Integer.parseInt(strTCMonth);
            int yy = Integer.parseInt(strTCYear);

            GregorianCalendar gc = new GregorianCalendar(yy,mm-1,1);
            Date d = gc.getTime();
            tfIssueDate.setDate(d);

            String query = "SELECT PARAM_VALUE FROM MYSPARAM WHERE "
                    + "PARAM_NAME LIKE 'INVOICE_DUE_DAYS'";

            String result = gdb.getSingleColumnData(query);

            int ddays = 0;
            if(result != null){
                ddays = Integer.parseInt(result);
            }
            
            gc.add(GregorianCalendar.DAY_OF_MONTH, ddays);
            Date dueDate = gc.getTime();

            tfDueDate.setDate(dueDate);
            
            
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        tfStatus = new acr.component.CTextField();
        tfStudentID = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfGradeID = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        cmbCategory = new mysd.CCMBFeeCategory();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfIssueDate = new com.toedter.calendar.JDateChooser();
        tfDueDate = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfInvoiceTotal = new javax.swing.JTextField();
        tfTimeCode = new acr.component.CIntegerField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfDiscount = new acr.component.CIntegerField();
        jSeparator1 = new javax.swing.JSeparator();
        btnUpdate = new javax.swing.JButton();
        tfInvoiceID = new acr.component.CAlphaNumericField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/status_32.png"))); // NOI18N
        jLabel5.setText("Status");

        tfStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfStatus.setEditable(false);
        tfStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfStatus.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        tfStatus.setEnabled(false);
        tfStatus.setFont(new java.awt.Font("Dialog", 1, 12));
        tfStatus.setOpaque(false);

        tfStudentID.setEditable(false);
        tfStudentID.setFont(new java.awt.Font("Dialog", 1, 12));
        tfStudentID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfStudentID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfStudentID.setDisabledTextColor(new java.awt.Color(0, 0, 51));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Dialog", 1, 12));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField2.setDisabledTextColor(new java.awt.Color(0, 0, 51));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Dialog", 1, 12));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextField3.setDisabledTextColor(new java.awt.Color(0, 0, 51));

        jLabel6.setText("Student ID");

        jLabel7.setText("Name");

        jLabel11.setText("Father Name");

        jLabel12.setText("Grade/Class");

        tfGradeID.setEditable(false);
        tfGradeID.setFont(new java.awt.Font("Dialog", 1, 12));
        tfGradeID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfGradeID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfGradeID.setDisabledTextColor(new java.awt.Color(0, 0, 51));

        cmbCategory.setAlignmentX(10.0F);
        cmbCategory.setFont(new java.awt.Font("Dialog", 0, 12));

        btnAdd.setBackground(new java.awt.Color(204, 204, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add24.png"))); // NOI18N
        btnAdd.setOpaque(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(204, 204, 255));
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/remove24.png"))); // NOI18N
        btnRemove.setOpaque(false);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category", "Description", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDetails);
        tblDetails.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblDetails.getColumnModel().getColumn(1).setResizable(false);
        tblDetails.getColumnModel().getColumn(1).setPreferredWidth(300);
        tblDetails.getColumnModel().getColumn(2).setPreferredWidth(100);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText("Due Date");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setText("Issue Date");

        tfIssueDate.setEnabled(false);

        tfDueDate.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(tfIssueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfIssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDueDate, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel3.setText("Inv Amount");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel4.setText("Time Code");

        tfInvoiceTotal.setEditable(false);
        tfInvoiceTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfInvoiceTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfInvoiceTotal.setDisabledTextColor(new java.awt.Color(0, 0, 153));
        tfInvoiceTotal.setEnabled(false);

        tfTimeCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfTimeCode.setEditable(false);
        tfTimeCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTimeCode.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        tfTimeCode.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTimeCode, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(tfInvoiceTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfTimeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfInvoiceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/discount.png"))); // NOI18N
        jLabel8.setText("Discount %");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/categorySelection_48.png"))); // NOI18N
        jLabel9.setText("Category Selection");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/DateTime02_48.png"))); // NOI18N
        jLabel10.setText("Date and Time Selection");

        tfDiscount.setEditable(false);
        tfDiscount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfDiscount.setText("0");
        tfDiscount.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        tfDiscount.setEnabled(false);
        tfDiscount.setFont(new java.awt.Font("Dialog", 1, 12));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAdd)
                        .addComponent(btnRemove)
                        .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnUpdate.setBackground(new java.awt.Color(204, 204, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update32.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setOpaque(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tfInvoiceID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfInvoiceID.setEditable(false);
        tfInvoiceID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfInvoiceID.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        tfInvoiceID.setFont(new java.awt.Font("Dialog", 1, 12));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfInvoiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfGradeID)
                            .addComponent(tfStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(tfInvoiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfGradeID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(31, 31, 31)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String feeCategory = this.cmbCategory.getCategory();
        String feeDesc = this.cmbCategory.getDescription();
        String feeAmount = this.cmbCategory.getDefaultAmount();
        addRow(feeCategory, feeDesc, feeAmount);
        calculateTotal();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Select a row to remove");
        } else {
            modelTBLDetails.removeRow(selectedRow);
        }

        calculateTotal();
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
            String status = tfStatus.getText();

            if(status.compareToIgnoreCase("ISSUED") != 0){
            String studentID = tfStudentID.getText();
            String timeCode = tfTimeCode.getText();
            //String invoiceID = timeCode + studentID.substring(2);
            String gradeID = tfGradeID.getText();
            String issueDate = gdb.getStrDateSQLFormat(tfIssueDate.getDate());
            String dueDate = gdb.getStrDateSQLFormat(tfDueDate.getDate());
            String invoiceTotal = tfInvoiceTotal.getText();
            String invoiceStatus = "CHANGED";
            String userID = System.getProperty("LOGIN_USER_NAME");
            String ttime = gdb.getTimeStamp();
            String discount = tfDiscount.getText();

            ArrayList al = new ArrayList();
            int r = tblDetails.getRowCount();
            for(int i=0; i<=r-1; i++){
                Vector v = new Vector();


                v.add((String)tblDetails.getValueAt(i, 0));
                v.add((String)tblDetails.getValueAt(i, 1));
                v.add((String)tblDetails.getValueAt(i, 2));
                v.add((String)tblDetails.getValueAt(i, 0)+invoiceID);

                al.add(v);
            }


            prepareInvoice(studentID, timeCode, invoiceID, gradeID, issueDate, dueDate,
                    invoiceTotal, invoiceStatus, userID, ttime, discount, al);
            }else{

                JOptionPane.showMessageDialog(null,"You cannot "
                        + "create/change \nthe issued invoice");
            }
    }//GEN-LAST:event_btnUpdateActionPerformed

    public void prepareInvoice(String studentID, String timeCode,
            String invoiceID, String gradeID, String issueDate, String dueDate,
            String invoiceTotal, String invoiceStatus, String userID,
            String ttime, String discount, ArrayList al){
        
        String queryM = "REPLACE INTO MONTHLYINVOICE(INVOICE_ID,"
                + "STUDENT_ID, GRADE_ID, TIME_CODE, ISSUE_DATE, "
                + "DUE_DATE, INVOICE_TOTAL, INVOICE_STATUS, USER_ID, TRANSACTION_TIME,"
                + "DISCOUNT)VALUES("
                + "'"+invoiceID+"',"
                + "'"+studentID+"',"
                + "'"+gradeID+"',"
                + "'"+timeCode+"',"
                + "'"+issueDate+"',"
                + "'"+dueDate+"',"
                + "'"+invoiceTotal+"',"
                + "'"+invoiceStatus+"',"
                + "'"+userID+"',"
                + "'"+ttime+"',"
                + "'"+discount+"')";

        String queryMH = "INSERT INTO MONTHLYINVOICEHISTORY(INVOICE_ID,"
                + "STUDENT_ID, GRADE_ID, TIME_CODE, ISSUE_DATE, "
                + "DUE_DATE, INVOICE_TOTAL, INVOICE_STATUS, USER_ID, TRANSACTION_TIME,"
                + "DISCOUNT)VALUES("
                + "'"+invoiceID+"',"
                + "'"+studentID+"',"
                + "'"+gradeID+"',"
                + "'"+timeCode+"',"
                + "'"+issueDate+"',"
                + "'"+dueDate+"',"
                + "'"+invoiceTotal+"',"
                + "'"+invoiceStatus+"',"
                + "'"+userID+"',"
                + "'"+ttime+"',"
                + "'"+discount+"')";

        String queryDeleteD = "DELETE FROM MONTHLYINVOICEDETAILS WHERE INVOICEID "
                + "LIKE '"+invoiceID+"'";

        String queryDeleteDH = "DELETE FROM MONTHLYINVOICEDETAILSHISTORY WHERE INVOICEID "
                + "LIKE '"+invoiceID+"'";
        
        DBSystem dbs = new DBSystem();
        Connection con = dbs.getConnection();
        try{
            con.setAutoCommit(false);
            Statement stmt = con.createStatement();
            stmt.executeUpdate(queryM);
            System.out.println("queryM executed...");
            stmt.executeUpdate(queryMH);
            System.out.println("queryMH executed...");
            stmt.executeUpdate(queryDeleteD);
            System.out.println("query Remove D executed...");
            stmt.executeUpdate(queryDeleteDH);
            System.out.println("query Remove D executed...");
            
            Iterator i = al.iterator();
            while(i.hasNext()){
                Vector v = (Vector)i.next();
                
                String feeCategory = (String)v.get(0);
                String feeDetails = (String)v.get(1);
                String feeAmount = (String)v.get(2);
                String uidn = (String)v.get(3);

                String queryD = "INSERT INTO MONTHLYINVOICEDETAILS("
                        + "INVOICE_ID, STUDENT_ID, FEE_CATEGORY,"
                        + "FEE_DETAILS, FEE_AMOUNT, UIDN, USER_ID, "
                        + "TRANSACTION_TIME)VALUES("
                        + "'"+invoiceID+"',"
                        + "'"+studentID+"',"
                        + "'"+feeCategory+"',"
                        + "'"+feeDetails+"',"
                        + "'"+feeAmount+"',"
                        + "'"+uidn+"',"
                        + "'"+userID+"',"
                        + "'"+ttime+"')";

                String queryDH = "INSERT INTO MONTHLYINVOICEDETAILSHISTORY("
                        + "INVOICE_ID, STUDENT_ID, FEE_CATEGORY,"
                        + "FEE_DETAILS, FEE_AMOUNT, UIDN, USER_ID, "
                        + "TRANSACTION_TIME)VALUES("
                        + "'"+invoiceID+"',"
                        + "'"+studentID+"',"
                        + "'"+feeCategory+"',"
                        + "'"+feeDetails+"',"
                        + "'"+feeAmount+"',"
                        + "'"+uidn+"',"
                        + "'"+userID+"',"
                        + "'"+ttime+"')";

                stmt.executeUpdate(queryD);
                System.out.println("queryD executed...");
                stmt.executeUpdate(queryDH);
                System.out.println("queryDH executed...");
                
            }

            con.commit();
            con.setAutoCommit(true);
            con.close();
            JOptionPane.showMessageDialog(null, "Invoiced drafted successfully");
            
        }catch(SQLException se){
            System.out.println(se.getMessage());
            try{
                System.out.println("Preparing rollback transaction");
                con.rollback();
                System.out.println("Transaction rollback was successfull");
                con.close();
            }catch(Exception e){
                System.out.println("Cannot rollback transaction");
            }
        }


        
    }
    


    public String checkAlreadyIssued(String timeCode, String studentID){
        
        String invoiceStatus = "";
        String invoiceID = "";
        invoiceID = timeCode+studentID.substring(2);
        System.out.println(invoiceID);
        String query = "SELECT INVOICE_STATUS FROM MONTHLYINVOICE WHERE "
                + "INVOICE_ID LIKE '"+invoiceID+"'";

        String stats = gdb.getSingleColumnData(query);
        
        if(stats == null || stats.compareToIgnoreCase("")==0){
            invoiceStatus = "NEW";
        }else{
            invoiceStatus = stats;
        }

        return invoiceStatus;
        
    }

    public Vector getNameFatherName(String studentID){
        
        String query = "SELECT FULL_NAME, FATHER_NAME FROM STUDENT "
                + "WHERE STUDENT_ID LIKE '"+studentID+"'";
        
        Vector v = gdb.getSingleRow(query);
        if(v.size() ==0){
            v.add("NA");
            v.add("NA");
        }

        return v;
    }
    
    public void addRow(String feeCategory, String feeDesc,
            String feeAmount) {

        boolean alreadyAdded = false;
        int r = this.tblDetails.getRowCount();
        for (int i = 0; i <= r - 1; i++) {
            String cat = (String) tblDetails.getValueAt(i, 0);
            if (cat.compareToIgnoreCase(feeCategory) == 0) {
                alreadyAdded = true;
                break;
            }
        }

        if (alreadyAdded) {
            JOptionPane.showMessageDialog(null, "This item is already added");
        } else {
            Vector v = new Vector();
            v.add(feeCategory);
            v.add(feeDesc);
            v.add(feeAmount);
            modelTBLDetails.addRow(v);
        }

    }

    public void calculateTotal(){
        int rowCount = tblDetails.getRowCount();
        if(rowCount > 0){
            double totalAmount = 0;
            for(int i=0; i<=rowCount-1; i++){
                String amount = (String)tblDetails.getValueAt(i, 2);
                totalAmount+=Double.parseDouble(amount);
            }
            //totalAmount = totalAmount - Double.parseDouble(tfDiscount.getText());
            double discount = Double.parseDouble(tfDiscount.getText());
            double poff = (discount/100)*totalAmount;
            totalAmount = totalAmount - poff;
            
            tfInvoiceTotal.setText(Double.toString(totalAmount));
        }else{
            tfInvoiceTotal.setText("0");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FInvoiceSingleView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnAdd;
    protected javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    protected mysd.CCMBFeeCategory cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    protected javax.swing.JTextField jTextField2;
    protected javax.swing.JTextField jTextField3;
    protected javax.swing.JTable tblDetails;
    private acr.component.CIntegerField tfDiscount;
    private com.toedter.calendar.JDateChooser tfDueDate;
    protected javax.swing.JTextField tfGradeID;
    private acr.component.CAlphaNumericField tfInvoiceID;
    protected javax.swing.JTextField tfInvoiceTotal;
    private com.toedter.calendar.JDateChooser tfIssueDate;
    protected acr.component.CTextField tfStatus;
    protected javax.swing.JTextField tfStudentID;
    private acr.component.CIntegerField tfTimeCode;
    // End of variables declaration//GEN-END:variables
}
